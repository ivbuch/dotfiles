- name: create main directory {{ mytools_path }}
  file:
    path: "/my-tools"
    state: directory
  become: yes
  become_method: sudo

- name: create links to {{ mytools_path }}/dotfiles and {{ mytools_path }}/ansible
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  become: yes
  become_method: sudo
  with_items:
    - { "src": "{{ dotfiles_path }}", "dest": "{{ mytools_path }}/dotfiles" }
    - { "src": "{{ homeinfostructure_path }}/ansible", "dest": "{{ mytools_path }}/ansible" }
    - { "src": "{{ homeinfostructure_path }}", "dest": "{{ mytools_path }}/home-infostructure" }

- name: create mutt directory
  file:
    path: "{{ ansible_env.HOME }}/{{ item }}"
    state: directory
  with_items:
    - ".mutt"
    - ".mutt/cache"
    - ".mutt/cache/headers"
    - ".mutt/cache/bodies"
    - ".mutt/cache/certificates"
    - "Downloads/mutt"
    - ".ssh"
    - ".i3"
    - ".config"
    - ".config/ranger"

- name: create file links
  file:
    src: "{{ mytools_path }}/dotfiles/{{ item.src }}"
    dest: "{{ ansible_env.HOME }}/{{ item.dest }}"
    state: link
  with_items:
    - {src: "vim/vimrc", dest: ".vimrc" }
    - {src: "vim/ideavimrc", dest: ".ideavimrc" }
    - {src: "tmux/tmux.conf", dest: ".tmux.conf" }
    - {src: "i3/work/config", dest: ".i3/config" }
    - {src: "ansible/ansible.cfg", dest: ".ansible.cfg" }
    - {src: "mutt/muttrc", dest: ".mutt/muttrc" }
    - {src: "mutt/color-scheme", dest: ".mutt/color-scheme" }
    - {src: "ranger/rc.conf", dest: ".config/ranger/rc.conf" }

- name: create link in etc
  file:
    src: "{{ mytools_path }}/dotfiles/{{ item.src }}"
    dest: "/etc/{{ item.dest }}"
    state: link
  become: yes
  become_method: sudo
  with_items:
    - {src: "i3/i3status.conf", dest: "i3status.conf" }

- name: create link to ~/.ssh/config
  file:
    src: "{{ mytools_path }}/home-infostructure/ansible/playbooks/home/dot-files/ssh-config"
    dest: "{{ ansible_env.HOME }}/.ssh/config"
    state: link

- name: create link to quteconfig
  file:
    src: "{{ mytools_path }}/home-infostructure/ansible/playbooks/home/dot-files/qutebrowser"
    dest: "{{ ansible_env.HOME }}/.config/qutebrowser"
    state: link

- name: remove default ansible inventory file
  file:
    dest: "/etc/ansible/hosts"
    state: absent
  become: yes
  become_method: sudo
  when: "'Mac' not in ansible_nodename"

- name: create .bash_aliases file if not exists
  file: 
    dest: "{{ ansible_env.HOME }}/.bash_aliases"
    state: touch
  register: touch_log
  changed_when: touch_log.diff.before.state != "file"

- name: Source custom bash aliases file
  lineinfile:
    path: "{{ ansible_env.HOME }}/.bash_aliases"
    line: "{{ item }}"
    state: present
  with_items:
    - "source {{ mytools_path }}/dotfiles/bash/bash_aliases"
    - "source {{ mytools_path }}/home-infostructure/bash-scripts/work/bash_aliases"
    - "source {{ mytools_path }}/home-infostructure/bash-scripts/work/bash_functions.sh"

- name: touch .zshrc file
  file: 
    dest: "{{ ansible_env.HOME }}/.zshrc"
    state: touch
  register: touch_log
  changed_when: touch_log.diff.before.state != "file"

- name: .zshrc must source aliases
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    line: "{{ item }}"
    state: present
  with_items:
    - "source ~/.bash_aliases"
    - "source ~/.bash_aliases"
    - "export PATH=$PATH:/my-tools/home-infostructure/python-scripts/docker"
    - "export PATH=$PATH:/my-tools/home-infostructure/python-scripts/svn"
    - "export PATH=$PATH:/my-tools/home-infostructure/python-scripts/tmux"
    - "export PATH=$PATH:/my-tools/home-infostructure/python-scripts/git"
    - "export PATH=$PATH:/my-tools/home-infostructure/python-scripts/i3"
    - "export PATH=$PATH:/my-tools/home-infostructure/bash-scripts/work"

- name: remove default ansible inventory file (MacOs)
  file:
    dest: "/usr/local/etc/ansible/hosts"
    state: absent

- name: check python3 exec
  stat:
    path: /usr/local/bin/python3
  register: p3_check

- name: check where python3 exec located
  shell: which python3
  register: sc
  changed_when: false

- name: create links to /usr/local/bin/python3 from {{ sc.stdout }}
  file:
    src: "{{ sc.stdout }}"
    dest: /usr/local/bin/python3
    state: link
  become: yes
  when: p3_check.stat.exists == false

- block:
  - name: remove unsupported in mac tmux settings
    lineinfile:
      path: "{{ ansible_env.HOME }}/.tmux.conf"
      regexp: "{{ item }}"
      state: absent
    with_items:
      - "bind -t vi-copy.*"
      - ".*mouse.*"
      - ".*utf8.*"
      - ".*set-buffer.*"
  - name: link qutebrowser settings
    file:
      src: "/my-tools/home-infostructure/ansible/playbooks/home/dot-files/qutebrowser"
      dest: "{{ ansible_env.HOME }}/Library/Preferences/qutebrowser"
      state: link
  when: is_mac_os
